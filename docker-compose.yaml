version: "3.9"

networks:
  wp:
    driver: "bridge"

services:
  #PHP-FPM service
  app:
    build:
      context: .
      dockerfile: ${DOCKERFILE_PATH_7_4}
    container_name: wp-web-crawler
    restart: unless-stopped
    tty: true
    working_dir: /var/www/wp-web-crawler
    depends_on:
      - composer
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./:/var/www/wp-web-crawler
      - ./docker-files/php/local.ini:/usr/local/etc/php/conf.d/local.ini

    networks:
      - wp

  #   #NGINX service
  wp_webserver:
    build:
      context: .
      dockerfile: ./docker-files/nginx/Dockerfile
    container_name: wp_webserver
    restart: unless-stopped
    depends_on:
      - db
      - app

    ports:
      - "7005:80"
    expose:
      - "7005"

    volumes:
      - ./:/var/www/wp-web-crawler
      - ./docker-files/nginx/conf.d/app.conf:/etc/nginx/conf.d/app.conf

    networks:
      - wp

  db:
    container_name: wp_db
    image: mysql:latest
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: root
    restart: always
    tty: true
    ports:
      - "7001:3306"

    volumes:
      - ./storage/dbdata:/var/lib/mysql
      - ./docker-files/mysql/mysql.cnf:/etc/mysql/mysql.cnf
      - ./docker-files/mysql/db.sql:/docker-entrypoint-initdb.d/db.sql
    networks:
      - wp

  # setup db management interface
  adminer:
    container_name: wp_adminer
    image: adminer:latest
    restart: always
    ports:
      - "7002:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - wp

  #setup composer
  composer:
    build:
      context: .
      dockerfile: ./docker-files/composer/Dockerfile
    container_name: wp_composer
    working_dir: /var/www/wp-web-crawler
    environment:
      - CONTAINER_ROLE=composer

    volumes:
      - ./:/var/www/wp-web-crawler
    depends_on:
      - db

    networks:
      - wp

  # setup cron
  cron:
    build:
      context: .
      dockerfile: ./docker-files/cron/Dockerfile
    container_name: wp_cron
    restart: always
    tty: true
    depends_on:
      - app
    environment:
      DB_CONNECTION: ${DB_CONNECTION}
      MYSQL_HOST: ${DB_HOST}
      MYSQL_PORT: ${DB_PORT}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./:/var/www/wp-web-crawler
    networks:
      - wp

  #setup redis
  redis:
    container_name: wp_redis
    image: redis:alpine
    env_file:
      - .env
    ports:
      - "7003:6379"
    volumes:
      - ./storage/redis/data:/data
    networks:
      - wp
